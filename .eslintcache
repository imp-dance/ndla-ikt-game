[{"/Users/hakonunderbakke/Documents/GitHub/ndla-ikt-game/src/index.tsx":"1","/Users/hakonunderbakke/Documents/GitHub/ndla-ikt-game/src/reportWebVitals.ts":"2","/Users/hakonunderbakke/Documents/GitHub/ndla-ikt-game/src/components/core/App.tsx":"3","/Users/hakonunderbakke/Documents/GitHub/ndla-ikt-game/src/components/common/TaskWindow/TaskWindow.tsx":"4","/Users/hakonunderbakke/Documents/GitHub/ndla-ikt-game/src/components/common/AssignNetworks/AssignNetworks.tsx":"5","/Users/hakonunderbakke/Documents/GitHub/ndla-ikt-game/src/data/tasks.tsx":"6","/Users/hakonunderbakke/Documents/GitHub/ndla-ikt-game/src/components/common/Button/Button.tsx":"7","/Users/hakonunderbakke/Documents/GitHub/ndla-ikt-game/src/components/design/Building/Building.tsx":"8","/Users/hakonunderbakke/Documents/GitHub/ndla-ikt-game/src/components/svg/foreground/Frame1.tsx":"9","/Users/hakonunderbakke/Documents/GitHub/ndla-ikt-game/src/components/svg/foreground/Frame2.tsx":"10","/Users/hakonunderbakke/Documents/GitHub/ndla-ikt-game/src/hooks/useWatchElementSize.ts":"11","/Users/hakonunderbakke/Documents/GitHub/ndla-ikt-game/src/data/images.ts":"12","/Users/hakonunderbakke/Documents/GitHub/ndla-ikt-game/src/components/common/Loader/Loader.tsx":"13","/Users/hakonunderbakke/Documents/GitHub/ndla-ikt-game/src/styles/zIndexes.ts":"14","/Users/hakonunderbakke/Documents/GitHub/ndla-ikt-game/src/components/common/Router/Router.tsx":"15","/Users/hakonunderbakke/Documents/GitHub/ndla-ikt-game/src/components/common/Lines/Lines.tsx":"16","/Users/hakonunderbakke/Documents/GitHub/ndla-ikt-game/src/components/common/CloudWWW/CloudWWW.tsx":"17","/Users/hakonunderbakke/Documents/GitHub/ndla-ikt-game/src/components/common/Connector/Connector.tsx":"18","/Users/hakonunderbakke/Documents/GitHub/ndla-ikt-game/src/components/common/DisplayWires/DisplayWires.tsx":"19","/Users/hakonunderbakke/Documents/GitHub/ndla-ikt-game/src/components/design/Background/Background.tsx":"20","/Users/hakonunderbakke/Documents/GitHub/ndla-ikt-game/src/components/common/Connector/LANtoSwitch1/LANToSwitch1.tsx":"21","/Users/hakonunderbakke/Documents/GitHub/ndla-ikt-game/src/components/common/Switch/Switch.tsx":"22","/Users/hakonunderbakke/Documents/GitHub/ndla-ikt-game/src/components/common/Server/Server.tsx":"23","/Users/hakonunderbakke/Documents/GitHub/ndla-ikt-game/src/components/common/PC/PC.tsx":"24","/Users/hakonunderbakke/Documents/GitHub/ndla-ikt-game/src/components/common/Connector/SwitchToDriftPC/SwitchToDriftPC.tsx":"25","/Users/hakonunderbakke/Documents/GitHub/ndla-ikt-game/src/components/common/Connector/SwitchToServer/SwitchToServer.tsx":"26","/Users/hakonunderbakke/Documents/GitHub/ndla-ikt-game/src/components/common/Connector/SwitchToSwitch/SwitchToSwitch.tsx":"27","/Users/hakonunderbakke/Documents/GitHub/ndla-ikt-game/src/components/common/NetworkIcon/NetworkIcon.tsx":"28","/Users/hakonunderbakke/Documents/GitHub/ndla-ikt-game/src/components/common/Modal/Modal.tsx":"29","/Users/hakonunderbakke/Documents/GitHub/ndla-ikt-game/src/components/common/Connector/SwitchToAnsattGruppe/SwitchToAnsattGruppe.tsx":"30","/Users/hakonunderbakke/Documents/GitHub/ndla-ikt-game/src/components/common/Connector/SwitchToKonsulentGruppe/SwitchToKonsulentGruppe.tsx":"31","/Users/hakonunderbakke/Documents/GitHub/ndla-ikt-game/src/components/common/Connector/SwitchToSwitch2/SwitchToSwitch2.tsx":"32","/Users/hakonunderbakke/Documents/GitHub/ndla-ikt-game/src/components/common/Accesspoint/Accesspoint.tsx":"33","/Users/hakonunderbakke/Documents/GitHub/ndla-ikt-game/src/components/common/Connector/SwitchToAccesspoint/SwitchToAccesspoint.tsx":"34","/Users/hakonunderbakke/Documents/GitHub/ndla-ikt-game/src/components/common/Connector/APToAnsatt/APToAnsatt.tsx":"35","/Users/hakonunderbakke/Documents/GitHub/ndla-ikt-game/src/components/common/Connector/APToGuest/APToGuest.tsx":"36","/Users/hakonunderbakke/Documents/GitHub/ndla-ikt-game/src/components/common/Laptop/Laptop.tsx":"37","/Users/hakonunderbakke/Documents/GitHub/ndla-ikt-game/src/components/common/MainMenu/MainMenu.tsx":"38","/Users/hakonunderbakke/Documents/GitHub/ndla-ikt-game/src/components/common/Modal/APModal.tsx":"39","/Users/hakonunderbakke/Documents/GitHub/ndla-ikt-game/src/components/common/Help/Help.tsx":"40","/Users/hakonunderbakke/Documents/GitHub/ndla-ikt-game/src/hooks/useTraceUpdate.ts":"41","/Users/hakonunderbakke/Documents/GitHub/ndla-ikt-game/src/components/common/Modal/WifiModal.tsx":"42","/Users/hakonunderbakke/Documents/GitHub/ndla-ikt-game/src/data/resetStates.ts":"43"},{"size":559,"mtime":1608718389035,"results":"44","hashOfConfig":"45"},{"size":425,"mtime":1608716403112,"results":"46","hashOfConfig":"45"},{"size":48986,"mtime":1611610457138,"results":"47","hashOfConfig":"45"},{"size":6578,"mtime":1611610937804,"results":"48","hashOfConfig":"45"},{"size":4436,"mtime":1611610441912,"results":"49","hashOfConfig":"45"},{"size":6057,"mtime":1611610886545,"results":"50","hashOfConfig":"45"},{"size":621,"mtime":1611258835891,"results":"51","hashOfConfig":"45"},{"size":3392,"mtime":1611178514938,"results":"52","hashOfConfig":"45"},{"size":759,"mtime":1608731850707,"results":"53","hashOfConfig":"45"},{"size":715,"mtime":1608731852145,"results":"54","hashOfConfig":"45"},{"size":2375,"mtime":1608733751130,"results":"55","hashOfConfig":"45"},{"size":2108,"mtime":1610378000950,"results":"56","hashOfConfig":"45"},{"size":2996,"mtime":1610378509893,"results":"57","hashOfConfig":"45"},{"size":124,"mtime":1610362251321,"results":"58","hashOfConfig":"45"},{"size":2503,"mtime":1611219026093,"results":"59","hashOfConfig":"45"},{"size":1501,"mtime":1610617396738,"results":"60","hashOfConfig":"45"},{"size":1406,"mtime":1610613097850,"results":"61","hashOfConfig":"45"},{"size":1900,"mtime":1611178729480,"results":"62","hashOfConfig":"45"},{"size":4945,"mtime":1611219345527,"results":"63","hashOfConfig":"45"},{"size":10188,"mtime":1611750261297,"results":"64","hashOfConfig":"45"},{"size":1276,"mtime":1610613022382,"results":"65","hashOfConfig":"45"},{"size":5712,"mtime":1611178903982,"results":"66","hashOfConfig":"45"},{"size":1650,"mtime":1610618502478,"results":"67","hashOfConfig":"45"},{"size":2634,"mtime":1611610404883,"results":"68","hashOfConfig":"45"},{"size":1490,"mtime":1610613012234,"results":"69","hashOfConfig":"45"},{"size":1322,"mtime":1611219792676,"results":"70","hashOfConfig":"45"},{"size":1977,"mtime":1611219923820,"results":"71","hashOfConfig":"45"},{"size":214,"mtime":1610359501191,"results":"72","hashOfConfig":"45"},{"size":4408,"mtime":1610964719570,"results":"73","hashOfConfig":"45"},{"size":1501,"mtime":1610613002273,"results":"74","hashOfConfig":"45"},{"size":1509,"mtime":1611218138874,"results":"75","hashOfConfig":"45"},{"size":1980,"mtime":1611221204984,"results":"76","hashOfConfig":"45"},{"size":1424,"mtime":1610400543676,"results":"77","hashOfConfig":"45"},{"size":1541,"mtime":1611217833614,"results":"78","hashOfConfig":"45"},{"size":1317,"mtime":1611219835372,"results":"79","hashOfConfig":"45"},{"size":1315,"mtime":1611219826077,"results":"80","hashOfConfig":"45"},{"size":2746,"mtime":1611610220520,"results":"81","hashOfConfig":"45"},{"size":2416,"mtime":1611610762525,"results":"82","hashOfConfig":"45"},{"size":5319,"mtime":1611255307478,"results":"83","hashOfConfig":"45"},{"size":8206,"mtime":1611611128636,"results":"84","hashOfConfig":"45"},{"size":469,"mtime":1611176651901,"results":"85","hashOfConfig":"45"},{"size":4599,"mtime":1611255340887,"results":"86","hashOfConfig":"45"},{"size":4852,"mtime":1611258361252,"results":"87","hashOfConfig":"45"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},"cj80dt",{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"167","usedDeprecatedRules":"90"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"172","messages":"173","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"174","usedDeprecatedRules":"90"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},"/Users/hakonunderbakke/Documents/GitHub/ndla-ikt-game/src/index.tsx",[],["177","178"],"/Users/hakonunderbakke/Documents/GitHub/ndla-ikt-game/src/reportWebVitals.ts",[],"/Users/hakonunderbakke/Documents/GitHub/ndla-ikt-game/src/components/core/App.tsx",[],"/Users/hakonunderbakke/Documents/GitHub/ndla-ikt-game/src/components/common/TaskWindow/TaskWindow.tsx",[],"/Users/hakonunderbakke/Documents/GitHub/ndla-ikt-game/src/components/common/AssignNetworks/AssignNetworks.tsx",[],"/Users/hakonunderbakke/Documents/GitHub/ndla-ikt-game/src/data/tasks.tsx",[],"/Users/hakonunderbakke/Documents/GitHub/ndla-ikt-game/src/components/common/Button/Button.tsx",[],"/Users/hakonunderbakke/Documents/GitHub/ndla-ikt-game/src/components/design/Building/Building.tsx",[],"/Users/hakonunderbakke/Documents/GitHub/ndla-ikt-game/src/components/svg/foreground/Frame1.tsx",[],"/Users/hakonunderbakke/Documents/GitHub/ndla-ikt-game/src/components/svg/foreground/Frame2.tsx",[],"/Users/hakonunderbakke/Documents/GitHub/ndla-ikt-game/src/hooks/useWatchElementSize.ts",[],"/Users/hakonunderbakke/Documents/GitHub/ndla-ikt-game/src/data/images.ts",[],"/Users/hakonunderbakke/Documents/GitHub/ndla-ikt-game/src/components/common/Loader/Loader.tsx",[],"/Users/hakonunderbakke/Documents/GitHub/ndla-ikt-game/src/styles/zIndexes.ts",[],"/Users/hakonunderbakke/Documents/GitHub/ndla-ikt-game/src/components/common/Router/Router.tsx",[],"/Users/hakonunderbakke/Documents/GitHub/ndla-ikt-game/src/components/common/Lines/Lines.tsx",[],"/Users/hakonunderbakke/Documents/GitHub/ndla-ikt-game/src/components/common/CloudWWW/CloudWWW.tsx",[],"/Users/hakonunderbakke/Documents/GitHub/ndla-ikt-game/src/components/common/Connector/Connector.tsx",[],"/Users/hakonunderbakke/Documents/GitHub/ndla-ikt-game/src/components/common/DisplayWires/DisplayWires.tsx",[],"/Users/hakonunderbakke/Documents/GitHub/ndla-ikt-game/src/components/design/Background/Background.tsx",[],"/Users/hakonunderbakke/Documents/GitHub/ndla-ikt-game/src/components/common/Connector/LANtoSwitch1/LANToSwitch1.tsx",[],"/Users/hakonunderbakke/Documents/GitHub/ndla-ikt-game/src/components/common/Switch/Switch.tsx",[],"/Users/hakonunderbakke/Documents/GitHub/ndla-ikt-game/src/components/common/Server/Server.tsx",[],"/Users/hakonunderbakke/Documents/GitHub/ndla-ikt-game/src/components/common/PC/PC.tsx",[],"/Users/hakonunderbakke/Documents/GitHub/ndla-ikt-game/src/components/common/Connector/SwitchToDriftPC/SwitchToDriftPC.tsx",[],"/Users/hakonunderbakke/Documents/GitHub/ndla-ikt-game/src/components/common/Connector/SwitchToServer/SwitchToServer.tsx",[],"/Users/hakonunderbakke/Documents/GitHub/ndla-ikt-game/src/components/common/Connector/SwitchToSwitch/SwitchToSwitch.tsx",[],"/Users/hakonunderbakke/Documents/GitHub/ndla-ikt-game/src/components/common/NetworkIcon/NetworkIcon.tsx",[],"/Users/hakonunderbakke/Documents/GitHub/ndla-ikt-game/src/components/common/Modal/Modal.tsx",[],"/Users/hakonunderbakke/Documents/GitHub/ndla-ikt-game/src/components/common/Connector/SwitchToAnsattGruppe/SwitchToAnsattGruppe.tsx",[],"/Users/hakonunderbakke/Documents/GitHub/ndla-ikt-game/src/components/common/Connector/SwitchToKonsulentGruppe/SwitchToKonsulentGruppe.tsx",[],"/Users/hakonunderbakke/Documents/GitHub/ndla-ikt-game/src/components/common/Connector/SwitchToSwitch2/SwitchToSwitch2.tsx",[],"/Users/hakonunderbakke/Documents/GitHub/ndla-ikt-game/src/components/common/Accesspoint/Accesspoint.tsx",[],"/Users/hakonunderbakke/Documents/GitHub/ndla-ikt-game/src/components/common/Connector/SwitchToAccesspoint/SwitchToAccesspoint.tsx",[],"/Users/hakonunderbakke/Documents/GitHub/ndla-ikt-game/src/components/common/Connector/APToAnsatt/APToAnsatt.tsx",[],"/Users/hakonunderbakke/Documents/GitHub/ndla-ikt-game/src/components/common/Connector/APToGuest/APToGuest.tsx",[],"/Users/hakonunderbakke/Documents/GitHub/ndla-ikt-game/src/components/common/Laptop/Laptop.tsx",[],"/Users/hakonunderbakke/Documents/GitHub/ndla-ikt-game/src/components/common/MainMenu/MainMenu.tsx",[],"/Users/hakonunderbakke/Documents/GitHub/ndla-ikt-game/src/components/common/Modal/APModal.tsx",["179","180"],"import * as React from \"react\";\n\nimport VLAN1 from \"../../../assets/symbols/VLAN1_Employee_Network.svg\";\nimport VLAN2 from \"../../../assets/symbols/VLAN2_Admin_Network.svg\";\nimport VLAN3 from \"../../../assets/symbols/VLAN3_Guest_Network.svg\";\nimport { State as NetworkState } from \"../AssignNetworks/AssignNetworks\";\nimport NetworkIcon from \"../NetworkIcon/NetworkIcon\";\nimport styled from \"styled-components\";\nimport zIndexes from \"../../../styles/zIndexes\";\n\nexport interface IModalProps {\n  open: boolean;\n  value: APConnection;\n  currentID: string;\n  onSave: (newValues: APConnection) => void;\n  onClose: () => void;\n  assignedNetworks?: NetworkState;\n}\n\ntype APConnection = {\n  enabled: [boolean, boolean, boolean];\n  networks: [string, string, string];\n};\n\nexport default function Modal(props: IModalProps) {\n  const [connections, setConnections] = React.useState<APConnection>(\n    props.value\n  );\n  const onChange = (index: number, value: any) => {\n    const newConnection = { ...props.value };\n    if (value.network !== undefined) {\n      newConnection.networks[index] = value.network;\n    }\n    if (value.checked !== undefined) {\n      newConnection.enabled[index] = value.checked;\n    }\n    setConnections(newConnection as APConnection);\n  };\n\n  React.useEffect(() => {\n    setConnections(props.value);\n  }, [props.value]);\n\n  if (!props.open) {\n    return null;\n  }\n  return props.assignedNetworks ? (\n    <>\n      <ModalBackdrop />\n      <ModalContainer>\n        <h3>Aksesspunkt konfigurasjon</h3>\n        <br />\n        <table>\n          <thead>\n            <tr>\n              <th>Aktiver</th>\n              <th>Nettverksnavn</th>\n              <th>VLAN</th>\n            </tr>\n          </thead>\n          <tbody>\n            {[2, 1, 0].map((value) => (\n              <ListItem\n                key={value}\n                index={value}\n                connections={connections}\n                assignedNetworks={props.assignedNetworks}\n                onChange={onChange}\n              />\n            ))}\n          </tbody>\n        </table>\n        <ButtonContainer>\n          <button onClick={props.onClose}>Avbryt</button>\n          <button onClick={() => props.onSave(connections)}>OK</button>\n        </ButtonContainer>\n      </ModalContainer>\n    </>\n  ) : null;\n}\n\ninterface IListItemProps {\n  index: number;\n  assignedNetworks?: NetworkState;\n  connections: APConnection;\n  onChange: (index: number, value: any) => void;\n}\n\nconst ListItem: React.FC<IListItemProps> = ({\n  index,\n  connections,\n  assignedNetworks,\n  onChange,\n}) => {\n  const getIcon = (index: number) => {\n    switch (index) {\n      case 0:\n        return VLAN1;\n      case 1:\n        return VLAN2;\n      case 2:\n        return VLAN3;\n    }\n  };\n  const getLabel = (index: number) => {\n    switch (index) {\n      case 0:\n        return \"Ansatt nettverk\";\n      case 1:\n        return \"Drift nettverk\";\n      case 2:\n        return \"Gjestenettverk\";\n    }\n  };\n\n  return (\n    <tr>\n      <td>\n        <input\n          type=\"checkbox\"\n          checked={connections.enabled[index]}\n          onChange={(e) => onChange(index, { checked: e.target.checked })}\n        />\n      </td>\n      <td>\n        <strong\n          onClick={() =>\n            onChange(index, { checked: !connections.enabled[index] })\n          }\n          style={{\n            opacity: connections.enabled[index] ? \"1\" : \"0.6\",\n            cursor: \"pointer\",\n            userSelect: \"none\",\n          }}\n        >\n          {getLabel(index)}\n        </strong>\n      </td>\n      <td>\n        <input\n          type=\"text\"\n          value={connections.networks[index]}\n          style={{ opacity: connections.enabled[index] ? \"1\" : \"0.6\" }}\n          onChange={(e) => onChange(index, { network: e.target.value })}\n        />\n      </td>\n    </tr>\n  );\n};\n\nconst ButtonContainer = styled.div`\n  padding: var(--padding-l);\n  padding-bottom: 0;\n  text-align: center;\n  > button {\n    padding: var(--padding-s) var(--padding-xl);\n    border-radius: 20px;\n    font-weight: bold;\n    background: var(--color-blue);\n    border: 2px solid var(--color-blue);\n    color: #fff;\n    cursor: pointer;\n    + button {\n      margin-left: var(--margin-s);\n    }\n    &:first-child {\n      background: #fff;\n      color: var(--color-blue);\n    }\n  }\n`;\n\nconst ModalBackdrop = styled.div`\n  position: fixed;\n  top: 0;\n  bottom: 0;\n  left: 0;\n  right: 0;\n  background: #deebf6;\n  opacity: 0.7;\n  z-index: ${zIndexes.modal - 1};\n`;\n\nconst ModalContainer = styled.div`\n  position: absolute;\n  padding: var(--padding-xxl);\n  background: #fff;\n  z-index: ${zIndexes.modal};\n  border: 2px solid var(--color-blue);\n  border-radius: 10px;\n  left: 50%;\n  top: 50%;\n  transform: translate(-50%, -50%);\n  display: flex;\n  flex-direction: column;\n  font-size: 0.8rem;\n  color: var(--color-blue);\n  h3 {\n    margin: 0;\n    font-size: 1.4em;\n  }\n  label {\n    display: flex;\n    align-items: center;\n    margin-bottom: var(--margin-xs);\n    width: 100%;\n  }\n  input[type=\"checkbox\"] {\n    margin-right: var(--margin-s);\n    margin: 0 auto;\n  }\n  input[type=\"text\"] {\n    max-width: 2ch;\n    border: 2px solid var(--color-light-blue);\n    border-radius: 5px;\n    font-weight: bold;\n    color: var(--color-blue);\n    text-align: center;\n  }\n  td,\n  th {\n    padding: 3px;\n    text-align: center;\n  }\n`;\n","/Users/hakonunderbakke/Documents/GitHub/ndla-ikt-game/src/components/common/Help/Help.tsx",[],"/Users/hakonunderbakke/Documents/GitHub/ndla-ikt-game/src/hooks/useTraceUpdate.ts",[],"/Users/hakonunderbakke/Documents/GitHub/ndla-ikt-game/src/components/common/Modal/WifiModal.tsx",["181"],"import * as React from \"react\";\n\nimport VLAN1 from \"../../../assets/symbols/VLAN1_Employee_Network.svg\";\nimport VLAN2 from \"../../../assets/symbols/VLAN2_Admin_Network.svg\";\nimport VLAN3 from \"../../../assets/symbols/VLAN3_Guest_Network.svg\";\nimport { State as NetworkState } from \"../../common/AssignNetworks/AssignNetworks\";\nimport { Connection } from \"../../../types/common\";\nimport NetworkIcon from \"../NetworkIcon/NetworkIcon\";\nimport styled from \"styled-components\";\nimport zIndexes from \"../../../styles/zIndexes\";\n\nexport interface IModalProps {\n  open: boolean;\n  value: Connection;\n  currentID: string;\n  onSave: (newValues: Connection) => void;\n  onClose: () => void;\n  assignedNetworks?: NetworkState;\n  currentActive: Connection;\n}\n\nexport default function WifiModal(props: IModalProps) {\n  const [connections, setConnections] = React.useState<Connection>(props.value);\n  const onChange = (index: number, value: string) => {\n    const newConnections: any = [false, false, false];\n    newConnections[index] = value;\n    setConnections(newConnections as Connection);\n  };\n\n  React.useEffect(() => {\n    setConnections(props.value);\n  }, [props.value]);\n\n  if (!props.open) {\n    return null;\n  }\n  return props.assignedNetworks ? (\n    <>\n      <ModalBackdrop />\n      <ModalContainer>\n        {props.currentActive.filter((item) => item).length > 0 ? (\n          props.currentActive.map(\n            (isActive, index) =>\n              isActive && (\n                <ListItem\n                  key={index}\n                  index={index}\n                  connections={connections}\n                  assignedNetworks={props.assignedNetworks}\n                  onChange={onChange}\n                />\n              )\n          )\n        ) : (\n          <strong>Ingen aktive nettverk tilgjengelige</strong>\n        )}\n        <ButtonContainer>\n          <button onClick={props.onClose}>Avbryt</button>\n          <button onClick={() => props.onSave(connections)}>OK</button>\n        </ButtonContainer>\n      </ModalContainer>\n    </>\n  ) : null;\n}\n\ninterface IListItemProps {\n  index: number;\n  assignedNetworks?: NetworkState;\n  connections: Connection;\n  onChange: (index: number, value: any) => void;\n}\n\nconst ListItem: React.FC<IListItemProps> = ({\n  index,\n  connections,\n  assignedNetworks,\n  onChange,\n}) => {\n  const getIcon = (index: number) => {\n    switch (index) {\n      case 0:\n        return VLAN1;\n      case 1:\n        return VLAN2;\n      case 2:\n        return VLAN3;\n    }\n  };\n  const getLabel = (index: number) => {\n    switch (index) {\n      case 0:\n        return \"Ansatt nettverk\";\n      case 1:\n        return \"Drift nettverk\";\n      case 2:\n        return \"Gjestenettverk\";\n    }\n  };\n  const key = index === 0 ? \"ansatt\" : index === 1 ? \"admin\" : \"gjest\";\n  return (\n    <label>\n      <input\n        type=\"radio\"\n        name=\"wifiinput\"\n        checked={connections[index]}\n        onChange={(e) => onChange(index, e.target.checked)}\n      />\n      <NetworkIcon src={getIcon(index)} alt=\"Ikon for nettverk\" />\n      {getLabel(index)}\n    </label>\n  );\n};\n\nconst ButtonContainer = styled.div`\n  padding: var(--padding-l);\n  padding-bottom: 0;\n  text-align: center;\n  > button {\n    padding: var(--padding-s) var(--padding-xl);\n    border-radius: 20px;\n    font-weight: bold;\n    background: var(--color-blue);\n    border: 2px solid var(--color-blue);\n    color: #fff;\n    cursor: pointer;\n    + button {\n      margin-left: var(--margin-s);\n    }\n    &:first-child {\n      background: #fff;\n      color: var(--color-blue);\n    }\n  }\n`;\n\nconst ModalBackdrop = styled.div`\n  position: fixed;\n  top: 0;\n  bottom: 0;\n  left: 0;\n  right: 0;\n  background: #deebf6;\n  opacity: 0.7;\n  z-index: ${zIndexes.modal - 1};\n`;\n\nconst ModalContainer = styled.div`\n  position: absolute;\n  padding: var(--padding-xxl);\n  background: #fff;\n  z-index: ${zIndexes.modal};\n  border: 2px solid var(--color-blue);\n  border-radius: 10px;\n  left: 50%;\n  top: 50%;\n  transform: translate(-50%, -50%);\n  display: flex;\n  flex-direction: column;\n  font-size: 0.8rem;\n  color: var(--color-blue);\n  label {\n    display: flex;\n    cursor: pointer;\n    align-items: center;\n    user-select: none;\n    margin-bottom: var(--margin-xs);\n    input[type=\"checkbox\"] {\n      margin-right: var(--margin-s);\n    }\n    input[type=\"text\"] {\n      max-width: 2ch;\n      border: 2px solid var(--color-light-blue);\n      border-radius: 5px;\n      margin: 0 0.5rem;\n      font-weight: bold;\n      color: var(--color-blue);\n      text-align: center;\n      user-select: none;\n      pointer-events: none;\n    }\n  }\n`;\n","/Users/hakonunderbakke/Documents/GitHub/ndla-ikt-game/src/data/resetStates.ts",[],{"ruleId":"182","replacedBy":"183"},{"ruleId":"184","replacedBy":"185"},{"ruleId":"186","severity":1,"message":"187","line":7,"column":8,"nodeType":"188","messageId":"189","endLine":7,"endColumn":19},{"ruleId":"186","severity":1,"message":"190","line":95,"column":9,"nodeType":"188","messageId":"189","endLine":95,"endColumn":16},{"ruleId":"186","severity":1,"message":"191","line":99,"column":9,"nodeType":"188","messageId":"189","endLine":99,"endColumn":12},"no-native-reassign",["192"],"no-negated-in-lhs",["193"],"@typescript-eslint/no-unused-vars","'NetworkIcon' is defined but never used.","Identifier","unusedVar","'getIcon' is assigned a value but never used.","'key' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]